#  name: Deploy Dockerhub
#
#  on:
#    push:
#      branches:
#        - dev
#
#  jobs:
#    build-and-deploy:
#      runs-on: ubuntu-latest
#
#      steps:
#        - name: Checkout code
#          uses: actions/checkout@v2
#
#        - name: Set up JDK 17
#          uses: actions/checkout@v2
#          with:
#            java-version: '17'
#            distribution: 'temurin'
#            cache: maven
#
#        - name: Restore Maven Package
#          uses: actions/cache@v2
#          with:
#            path: ~/.m2/repository
#            key: ${{ runner.os }}-maven-${{ hashFiles('/*.xml') }}
#            restore-keys: |
#              ${{ runner.os }}-maven-
#
#
#        - name: Login to Docker Hub
#          uses: docker/login-action@v2
#          with:
#            username: ${{ secrets.DOCKER_USERNAME }}
#            password: ${{ secrets.DOCKER_PASSWORD }}
#
#
#        - name: Build Docker image
#          run: docker build -t chichia/devip:latest .
#            mvn clean package
##            java -Dspring.profiles.active=prod -jar target/devip.jar
#
#
#        - name: Push Docker image to Docker Hub
#          run: docker push chichia/devip:latest
#
#
#

name: Deploy Dockerhub

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Restore Maven Package
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step to run Maven and package the project
      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t chichia/devip:latest .

      - name: Push Docker image to Docker Hub
        run: docker push chichia/devip:latest

      - name: Deploy to AWS EC2
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PEM }}
          INSTANCE_IP: ${{ secrets.AWS_IP_ADDRESS }}
        run: |
          echo "$PRIVATE_KEY" > aws_pem.pem
          chmod 600 aws_pem.pem
          mkdir -p ~/.ssh
          ssh-keyscan -H $INSTANCE_IP >> ~/.ssh/known_hosts
          ssh -i aws_pem.pem ubuntu@$INSTANCE_IP << 'EOF'
            sudo docker pull chichia/devip:latest
            sudo docker run -d -p 8086:8086 chichia/devip:latest
          EOF  

